# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: self-hosted
    env:
      PORT: ${{ secrets.PORT }}
      MONGODB_CONNECTION_STRING: ${{ secrets.MONGODB_CONNECTION_STRING }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      EMAIL: ${{ secrets.EMAIL }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      CURRENCY: ${{ secrets.CURRENCY }}
      SUCCESS_URL: ${{ secrets.SUCCESS_URL }}
      CANCEL_URL: ${{ secrets.CANCEL_URL }}
    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      
      - name: Display Environment Variables
        run: |
          echo "PORT=${{ env.PORT }}"
          echo "MONGODB_CONNECTION_STRING=${{ env.MONGODB_CONNECTION_STRING }}"    
          echo "SECRET_KEY=${{ env.SECRET_KEY }}"
          echo "EMAIL=${{ env.EMAIL }}"
          echo "EMAIL_PASSWORD=${{ env.EMAIL_PASSWORD }}"
          echo "JWT_REFRESH_SECRET=${{ env.JWT_REFRESH_SECRET }}"
          echo "CLOUDINARY_CLOUD_NAME=${{ env.CLOUDINARY_CLOUD_NAME }}"
          echo "CLOUDINARY_API_KEY=${{ env.CLOUDINARY_API_KEY }}"
          echo "CLOUDINARY_API_SECRET=${{ env.CLOUDINARY_API_SECRET }}"
          echo "AWS_REGION=${{ env.AWS_REGION }}"
          echo "AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}"
          echo "AWS_BUCKET_NAME=${{ env.AWS_BUCKET_NAME }}"
          echo "STRIPE_SECRET_KEY=${{ env.STRIPE_SECRET_KEY }}"
          echo "CURRENCY=${{ env.CURRENCY }}"
          echo "SUCCESS_URL=${{ env.SUCCESS_URL }}"
          echo "CANCEL_URL=${{ env.CANCEL_URL }}"
          
      - name: Verify Environment Variables
        run: node verify-env.js
        
      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build --if-present
        
      - name: Start Application
        run: pm2 restart start
          